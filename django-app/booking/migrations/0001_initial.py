# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-09-24 15:03
from __future__ import unicode_literals

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Addon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.CharField(max_length=256)),
                ('price_per_unit', models.IntegerField(default=20)),
                ('unit', models.CharField(choices=[('M', 'Morning'), ('E', 'Evening'), ('W', 'Whole day'), ('T', 'Time slot')], default='W', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='AddonsPurchasing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Addon')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now=True)),
                ('adults', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('total_price', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(10)])),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=64)),
                ('email', models.CharField(max_length=64)),
                ('sex', models.BooleanField(choices=[(True, 'Male'), (False, 'Female')], default=True)),
                ('phone', models.CharField(blank=True, max_length=64, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=32, null=True)),
                ('country', models.CharField(blank=True, max_length=32, null=True)),
                ('note', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Enhance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addons', models.ManyToManyField(to='booking.AddonsPurchasing')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseInDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('price_options', models.CharField(choices=[('P', 'per person'), ('G', 'group')], default='P', max_length=1)),
                ('day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Day')),
            ],
        ),
        migrations.CreateModel(
            name='RentPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(db_index=True)),
                ('finish_date', models.DateField(db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Suite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('price_per_night', models.IntegerField(db_index=True, default=10)),
                ('rent_periods', models.ManyToManyField(blank=True, db_index=True, to='booking.RentPeriod')),
            ],
        ),
        migrations.CreateModel(
            name='TimeInterval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField(default=datetime.time(0, 0))),
                ('finish_time', models.TimeField(default=datetime.time(0, 0))),
            ],
        ),
        migrations.AddField(
            model_name='purchaseinday',
            name='time_interval',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='booking.TimeInterval'),
        ),
        migrations.AddField(
            model_name='booking',
            name='addons',
            field=models.ForeignKey(blank=True, null=True, on_delete=models.SET(None), to='booking.Enhance'),
        ),
        migrations.AddField(
            model_name='booking',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='booking.Client'),
        ),
        migrations.AddField(
            model_name='booking',
            name='period',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='booking.RentPeriod'),
        ),
        migrations.AddField(
            model_name='booking',
            name='suites',
            field=models.ManyToManyField(to='booking.Suite'),
        ),
        migrations.AddField(
            model_name='addonspurchasing',
            name='purchased_in_dates',
            field=models.ManyToManyField(to='booking.PurchaseInDay'),
        ),
        migrations.AddField(
            model_name='addon',
            name='availability_days',
            field=models.ManyToManyField(to='booking.Day'),
        ),
        migrations.AddField(
            model_name='addon',
            name='availability_time_slots',
            field=models.ManyToManyField(blank=True, to='booking.TimeInterval'),
        ),
    ]
